ia-modal
<section class="feature_product_area section_gap_bottom_custom">
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-lg-12">
        <div class="main_title">
          <h2>
            <span>{{ section.settings.title }}</span>
          </h2>
          <p>{{ section.settings.subtitle }}</p>
        </div>
      </div>
    </div>

    <div class="row">
      {% for product in section.settings.collection.products limit: section.settings.product_limit %}
        <!-- {% render 'product-card' %} -->
        <div class="col-lg-4 col-md-6">
          <div class="single-product">
            <div class="product-img">
              <img
                class="img-fluid"
                src="{{ product.featured_image | img_url: '500x' }}"
                alt="{{ product.title }}"
                style="width: 90%;"
              >
              <div class="p_icon">
                <a href="{{ product.url }}">
                  <i class="fa-solid fa-eye"></i>
                </a>
                <a href="#" onclick="addToWishlist('{{ product.id }}')">
                  <i class="fa-regular fa-heart"></i>
                </a>
                <a href="#" onclick="addToCart('{{ product.variants.first.id }}', 1)">
                  <i class="fa-solid fa-cart-shopping"></i>
                </a>
              </div>
            </div>
            <div class="product-btn">
              <a href="{{ product.url }}" class="d-block">
                <h4>{{ product.title }}</h4>
              </a>
              <div class="mt-3">
                <span class="mr-4">{{ product.price | money }}</span>
                {% if product.compare_at_price > product.price %}
                  <del>{{ product.compare_at_price | money }}</del>
                {% endif %}
              </div>
            </div>
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
</section>

<script>
     function addToCart(variantId, quantity) {
       fetch('/cart/add.js', {
         method: 'POST',
         headers: { 'Content-Type': 'application/json' },
         body: JSON.stringify({ id: variantId, quantity: quantity })
       }).then(response => response.json()).then(data => {
         alert('Added to cart!');
       });
     }

   function addToWishlist(productId) {
    const list = JSON.parse(localStorage.getItem('wishlist') || '[]');
    if (!list.includes(productId)) {
      list.push(productId);
      localStorage.setItem('wishlist', JSON.stringify(list));
      alert('Added to wishlist!');
    } else {
      alert('Already on your wishlist.');
    }
       function addToWishlist(productId) {
    const wishlist = getWishlist();
    const idStr = String(productId);

    if (!wishlist.includes(idStr)) {
      wishlist.push(idStr);
      saveWishlist(wishlist);
      alert('Added to wishlist!');
    } else {
      alert('Already in wishlist!');
    }
  }
</script>
  }
</script>

{% schema %}
{
  "name": "Featured Products",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Featured Product"
    }, {
      "type": "text",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "Bring called seed first of third give itself now ment"
    }, {
      "type": "collection",
      "id": "collection",
      "label": "Select Collection"
    }, {
      "type": "range",
      "id": "product_limit",
      "label": "Number of Products",
      "min": 1,
      "max": 12,
      "default": 3
    }
  ],
  "presets": [
    {
      "name": "Featured Products",
      "category": "Products",
      "settings": {
        "title": "Featured Product",
        "subtitle": "Bring called seed first of third give itself now ment",
        "collection": "",
        "product_limit": 3
      }
    }
  ]
}
{% endschema %}
